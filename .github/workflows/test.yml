name: PHP Unit
on: push

defaults:
  run:
    working-directory: ./laravel

jobs:
  build:
    name: Testing
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.19
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: livechat_test_db

    env:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: livechat_test_db
      DB_USERNAME: root
      DB_PASSWORD: password

    steps:
      - uses: actions/checkout@v2
      - name: Installing PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extension-csv: mbstring, xdebug
      - name: cache vendor
        id: cache
        uses: actions/cache@v1
        with:
          path: ./vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: composer install
        if: steps.cache.outputs.cache-hit != 'true'
        run: composer install -n --prefer-dist
      - name: Add Plugin
        run: sudo apt install -y php7.4-xml
      - name: Check PHP Version
        run: php -v
      - name: Check Composer Version
        run: composer -V
      - name: Check PHP Extensions
        run: php -m
      - name: Change Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: composer dump autoload
        run: composer dump-autoload
      - name: Run migration
        run: php artisan migrate --force
      - name: Set .env
        run: cp .env.example .env
      - name: Generate APP_KEY
        run: php artisan key:generate --quiet
      - name: Run phpstan
        run: ./vendor/bin/phpstan --memory-limit=1G analyse --no-progress
      - name: Run PHP Unit
        run: XDEBUG_MODE=coverage ./vendor/bin/phpunit --coverage-clover=coverage.xml
      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
